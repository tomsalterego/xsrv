### LINUX USERS ###
# setup user accounts/PAM configuration (yes/no)
setup_users: yes
# Additional user accounts to create.
# Supports these parameters from the user (https://docs.ansible.com/ansible/latest/modules/user_module.html) module:
#   name, password, comment, create_home, home, groups, append, generate_ssh_key, update_password
# In addition these optional parameters are supported:
#   ssh_authorized_keys: list of public key files to authorize on this account
#   sudo_nopasswd_commands: list of commands the user should be able to run with sudo without password
# Example:
# linux_users:
#   - name: "remotebackup"
#     groups: [ "ssh-access", "sudo" ]
#     comment: "limited user account for remote backups"
#     ssh_authorized_keys: ['data/public_keys/root@backup.EXAMPLE.org.pub']
#     home: "/home/remotebackup"
#     sudo_nopasswd_commands: ['/usr/bin/rsync']
#   - name: "my-sftp-account"
#     home: "/var/lib/sftp/my-sftp-account"
#     comment: "SFTP-only account"
#     ssh_authorized_keys: [ "data/public_keys/gitlab-runner@my.EXAMPLE.org.pub", "data/public_keys/client1@EXAMPLE.org.pub" ]
#     groups: [ 'ssh-access', 'sftponly' ]
#   - name: "{{ ansible_user }}"
#     groups: adm
#     append: yes
#     comment: "ansible user/allowed to read system logs"
#   - name: bob
#     groups: ['ssh-access', 'sudo']
#     password: "{{ bob_ssh_password }}"
#     comment: "SSH account for bob, root access via sudo"
linux_users: []
# allow ansible connecting user to run 'sudo rsync' without password (yes/no)
# Required to use the ansible synchronize module, and download files generated by the backup role
ansible_user_allow_sudo_rsync_nopasswd: yes
# kill user processes when an interactive user logs out (yes/no)
systemd_logind_kill_user_processes: yes
# do not kill processes on logout for these users
systemd_logind_kill_exclude_users: ['root']
# time after which idle interactive login sessions are automatically closed (minutes, set to 0 to disable)
systemd_logind_lock_after_idle_min: 0
# terminate interactive bash processes after this number of seconds if no input is received (set to 0 to disable)
bash_timeout: 900
